package com.toozo.asteriumwebserver.gamelogic.items.equipment;

import java.util.Collection;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import com.toozo.asteriumwebserver.gamelogic.PlayerCharacter;

/**
 * A player's equipment, with slots for each type of {@link AbstractEquipmentItem}.
 * 
 * @author Greg Schmitt
 */
public class Equipment {
	// ===== FIELDS =====
	private Map<EquipmentSlot, AbstractEquipmentItem> slots;
	// ==================
	
	// ===== CONSTRUCTORS =====
	public Equipment() {
	}
	
	public Equipment(AbstractEquipmentItem starterItem) {
		
	}
	
	/**
	 * Constructs a new Equipment with as many of the {@link AbstractEquipmentItem}s in
	 * starterItems equipped as possible.
	 * 
	 * If multiple items are of the same type (e.g. two headgear items), there is no guarantee
	 * which will be equipped.
	 * 
	 * @param starterItems a list of items which should be equipped if possible.
	 */
	public Equipment(Collection<AbstractEquipmentItem> starterItems) {
		this.slots = new ConcurrentHashMap<EquipmentSlot, AbstractEquipmentItem>();
		
		// Instantiate slots
		for (EquipmentSlot slot : EquipmentSlot.values()) {
			this.slots.put(slot, null);
		}
		
		// Put items into slots
		EquipmentSlot type;
		for (AbstractEquipmentItem item : starterItems) {
			type = item.getType();
			boolean canEquip = !slotFull(type);
			item.setEquipped(canEquip);
			if (canEquip) {
				// Equip it
				this.slots.put(type, item);
			}
		}
	}
	// ========================
	
	// ===== GETTERS =====
	public boolean slotFull(EquipmentSlot slot) {
		return this.slots.get(slot) == null;
	}
	// ===================
	
	// ===== SETTERS =====
	/**
	 * If equipper has the item, equips the item to equippee.
	 * 
	 * @param item
	 * @param equipper
	 * @param equippee
	 */
	public void equip(AbstractEquipmentItem item, PlayerCharacter equipper, PlayerCharacter equippee) {
		EquipmentSlot type = item.getType();
		// Make sure that equipper has the item.
		if (equipper.getInventory().contains(item)) {
			
		}
	}
	// ===================
}
