package actiondata;

import java.util.Collection;
import java.util.HashSet;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import actiondata.InventoryData.ItemData;
import message.Request;

/**
 * {@link DiscardItemRequestData} is the representation of data to be used in a
 * {@link Request} from a PlayerCharacter to use an Item from an Inventory.
 * 
 * @author Studio Toozo
 */
public class DiscardItemRequestData extends AbstractRequestActionData {
	private ItemData item;

	public DiscardItemRequestData(final Collection<String> targets, final ItemData item, final boolean isCommunal) {
		super(ActionData.DISCARD_ITEM);
		this.item = item;
	}

	public final ItemData getItem() {
		return this.item;
	}

	@Override
	public JSONObject jsonify() {
		JSONObject data = new JSONObject();

		JSONArray targetsArray = new JSONArray();
		for (String target : this.targets) {
			targetsArray.put(target);
		}
		data.put(ActionData.TARGETS, targetsArray);

		data.put(ActionData.ITEM, this.item.jsonify());

		data.put(ActionData.IS_COMMUNAL, this.isCommunal);

		return data;
	}

	/**
	 * Parses {@link JSONObject} into a {@link DiscardItemRequestData} object
	 * 
	 * @param jsonObj
	 *            the {@link JSONObject} to be parsed
	 * @return the {@link DiscardItemRequestData} object parsed from JSON.
	 * @throws JSONException
	 */
	public static DiscardItemRequestData parseArgs(final JSONObject jsonObj) throws JSONException {

		JSONArray targetsArray = jsonObj.getJSONArray(ActionData.TARGETS);
		
		Collection<String> targets = new HashSet<String>();
		for (int i = 0; i < targetsArray.length(); i++) {
			targets.add(targetsArray.getString(i));
		}

		JSONObject itemObject = jsonObj.getJSONObject(ActionData.ITEM);
		String itemID = itemObject.getString(ActionData.ITEM_ID);
		ItemData item = new ItemData(itemID);

		boolean isCommunal = jsonObj.getBoolean(ActionData.IS_COMMUNAL);

		return new DiscardItemRequestData(targets, item, isCommunal);
	}
}
