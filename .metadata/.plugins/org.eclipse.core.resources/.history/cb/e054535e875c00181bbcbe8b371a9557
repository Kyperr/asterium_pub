package com.toozo.asteriumwebserver.gamelogic.items.location;

import java.util.Arrays;
import java.util.Collection;
import java.util.Random;
import java.util.function.Function;

import com.toozo.asteriumwebserver.gamelogic.GameState;
import com.toozo.asteriumwebserver.gamelogic.PlayerCharacter;
import com.toozo.asteriumwebserver.gamelogic.Stat;
import com.toozo.asteriumwebserver.gamelogic.statuseffects.AffectStats;

public class Book extends AbstractLocationItem {
	// ===== CONSTANTS =====
	// Stamina Book Names
	public static final Collection<String> STAMINA_BOOK_NAMES = Arrays.asList(
		"Workouts for the Lazy",
		"Bunches of Punches and Crunches",
		"Hernia-Free Deadlifts",
		"Wrastlin': A Review",
		"Push-ups and Pull-ups",
		"Weightlifting in Zero-G",
		"Creatinism",
		"The Peccing Order"
	);
	// Luck Book Names
	public static final Collection<String> LUCK_BOOK_NAMES = Arrays.asList(
		"The Ace Up My Sleeve",
		"History of Space Poker",
		"Turns, Rivers, and Flops, Oh My!",
		"How to Win at Games of Chance",
		"Living With Paraskevidekatriaphobia",
		"On Horseshoes",
		"Quadrifolium",
		"21: Triple Seven",
		"Space Albatross: More Than A Myth?",
		"Outsmarting Statistics"
	);
	// Intuition Book Names
	public static final Collection<String> INTUITION_BOOK_NAMES = Arrays.asList(
		"Elementary Crystallography",
		"Cellular Automata for Dummies",
		"Chicken Soup for the Neurobiologist's Soul",
		"Defibrillation and You",
		"20 Ways To Milk Your Pineal Gland",
		"Spectacular Spectacled Specialists",
		"Spectacular Spectacled Specialists: Swimsuit Edition",
		"The Hypocritical Oath",
		"Forceps and Foresight",
		"Preventing the Helvetica Scenario",
		"Everything You Need To Know About Exsanguination"
	);
	// Single Stat Collections
	public static final Collection<Stat> STAMINA = Arrays.asList(Stat.STAMINA);
	public static final Collection<Stat> LUCK = Arrays.asList(Stat.LUCK);
	public static final Collection<Stat> INTUITION = Arrays.asList(Stat.INTUITION);
	// Dual Stat Collections
	public static final Collection<Stat> STAMINA_LUCK = Arrays.asList(Stat.STAMINA,
																	  Stat.LUCK);
	public static final Collection<Stat> STAMINA_INTUITION = Arrays.asList(Stat.STAMINA,
			  															   Stat.INTUITION);
	public static final Collection<Stat> LUCK_INTUITION = Arrays.asList(Stat.LUCK,
																		Stat.INTUITION);
	// Triple Stat Collections
	public static final Collection<Stat> STAMINA_LUCK_INTUITION = Arrays.asList(Stat.STAMINA,
																				Stat.LUCK,
																				Stat.INTUITION);
	// =====================
	
	// ===== FIELDS =====
	private Collection<Stat> stats;
	private Function<Integer, Integer> effect;
	// ==================
	
	// ===== STATIC METHODS =====
	private static String randomName(Collection<Stat> stats) {
		String result = "";
		return result;
	}
	// ==========================
	
	// ===== CONSTRUCTORS =====
	public Book() {
		
	}
	
	public Book(Collection<Stat> stats) {
		
	}
	
	public Book(final int amount) {
		this("rand", Stat.HEALTH, amount);
	}
	
	public Book(Collection<Stat> stats, final int amount) {
		this(randomName(stats), stats, amount);
	}
	
	public Book(final String name, final Collection<Stat> stats, final int amount) {
		super(name);
		this.stats = stats;
		this.effect = (oldStat) -> (oldStat + amount);
	}
	// ========================

	// ===== METHODS =====
	@Override
	public void applyEffect(GameState state, PlayerCharacter user, Collection<PlayerCharacter> targets) {
		user.addStatusEffect(new AffectStats(user, this.stats, this.effect));
	}
	// ===================

}
